set max_line_width 300;
OK

-- create topic with 1 partition, so we can see messages consumed in offset order;
topic1 := (kafka in partitions = 1) -> (kafka out);
OK

--produce data dataset_1;

(scan all from topic1) -> (sort by key);
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| offset               | event_time                 | key                                                                             | hdrs                                                                            | val                                                                             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0                    | 2006-01-02 15:04:05.000000 | key01                                                                           | .                                                                               | {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01",".. |
| 1                    | 2006-01-02 15:05:05.000000 | key02                                                                           | .                                                                               | {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02",.. |
| 2                    | 2006-01-02 15:06:05.000000 | key03                                                                           | .                                                                               | {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03",".. |
| 3                    | 2006-01-02 15:07:05.000000 | key04                                                                           | .                                                                               | {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04",.. |
| 4                    | 2006-01-02 15:08:05.000000 | key05                                                                           | .                                                                               | {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05",".. |
| 5                    | 2006-01-02 15:09:05.000000 | key06                                                                           | .                                                                               | {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06",.. |
| 6                    | 2006-01-02 15:10:05.000000 | key07                                                                           | .                                                                               | {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07",".. |
| 7                    | 2006-01-02 15:11:05.000000 | key08                                                                           | .                                                                               | {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08",.. |
| 8                    | 2006-01-02 15:12:05.000000 | key09                                                                           | .                                                                               | {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09",".. |
| 9                    | 2006-01-02 15:13:05.000000 | key10                                                                           | .                                                                               | {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10.. |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows returned

--consume data topic1 test_group1 earliest 3 commit;
partition offset key headers value timestamp
0 1 key01  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
0 2 key02  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
0 3 key03  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000

--consume data topic1 test_group1 earliest 2 commit;
partition offset key headers value timestamp
0 4 key04  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
0 5 key05  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000

--restart cluster;

set max_line_width 300;
OK

-- offset should be persisted between restarts;

--consume data topic1 test_group1 earliest 2 commit;
partition offset key headers value timestamp
0 6 key06  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
0 7 key07  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000

-- add a different consumer group;

--consume data topic1 test_group2 earliest 4 commit;
partition offset key headers value timestamp
0 1 key01  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
0 2 key02  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
0 3 key03  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
0 4 key04  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000

--consume data topic1 test_group1 earliest 3 commit;
partition offset key headers value timestamp
0 8 key08  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
0 9 key09  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
0 10 key10  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

-- now don't commit;

--consume data topic1 test_group2 earliest 2 no_commit;
partition offset key headers value timestamp
0 5 key05  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
0 6 key06  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000

-- same messages should be delivered again;

--consume data topic1 test_group2 earliest 2 commit;
partition offset key headers value timestamp
0 5 key05  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
0 6 key06  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000

delete(topic1);
OK

topic1 := (kafka in partitions = 1) -> (kafka out);
OK

-- test auto.offset.reset = latest;
-- produce data after a delay - this allows consumer to be created;

--async produce data dataset_1 1000;

--consume data topic1 test_group1 latest 10 commit;
partition offset key headers value timestamp
0 1 key01  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
0 2 key02  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
0 3 key03  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
0 4 key04  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
0 5 key05  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
0 6 key06  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
0 7 key07  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
0 8 key08  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
0 9 key09  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
0 10 key10  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

delete(topic1);
OK

--create topic test_topic 10;

topic2 := (bridge from test_topic partitions = 10 props = ()) -> (kafka out);
OK

--load data dataset_2;

(scan all from topic2) -> (project key, hdrs, val) -> (sort by key);
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| key                                                                                              | hdrs                                                                                             | val                                                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| key11                                                                                            | .                                                                                                | {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01.. |
| key12                                                                                            | .                                                                                                | {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes0.. |
| key13                                                                                            | .                                                                                                | {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03.. |
| key14                                                                                            | .                                                                                                | {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes0.. |
| key15                                                                                            | .                                                                                                | {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05.. |
| key16                                                                                            | .                                                                                                | {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes0.. |
| key17                                                                                            | .                                                                                                | {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07.. |
| key18                                                                                            | .                                                                                                | {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes0.. |
| key19                                                                                            | .                                                                                                | {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09.. |
| key20                                                                                            | .                                                                                                | {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebyte.. |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows returned

--consume data topic2 test_group1 earliest 10 commit no_print_offset;
key headers value timestamp
key11  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
key12  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
key13  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
key14  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
key15  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
key16  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
key17  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
key18  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
key19  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
key20  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

delete(topic2);
OK

--delete topic test_topic;

-- try to consume from topic with no kafka out;
topic3 := (kafka in partitions = 1) -> (store stream);
OK

--consume data topic3 test_group1 earliest 10 commit;
partition offset key headers value timestamp
Failed to fetch committed offset for group "test_group1" topic topic3 [0]: Broker: Unknown topic or partition

delete(topic3);
OK

-- create topic with multiple partition, so we can test consumption from multiple partitions;
topic4 := (kafka in partitions = 10) -> (kafka out);
OK

--produce data dataset_3;

(scan all from topic4) -> (sort by key);
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| offset               | event_time                 | key                                                                             | hdrs                                                                            | val                                                                             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0                    | 2006-01-02 15:04:05.000000 | key21                                                                           | .                                                                               | {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01",".. |
| 0                    | 2006-01-02 15:05:05.000000 | key22                                                                           | .                                                                               | {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02",.. |
| 1                    | 2006-01-02 15:06:05.000000 | key23                                                                           | .                                                                               | {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03",".. |
| 0                    | 2006-01-02 15:07:05.000000 | key24                                                                           | .                                                                               | {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04",.. |
| 0                    | 2006-01-02 15:08:05.000000 | key25                                                                           | .                                                                               | {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05",".. |
| 0                    | 2006-01-02 15:09:05.000000 | key26                                                                           | .                                                                               | {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06",.. |
| 0                    | 2006-01-02 15:10:05.000000 | key27                                                                           | .                                                                               | {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07",".. |
| 0                    | 2006-01-02 15:11:05.000000 | key28                                                                           | .                                                                               | {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08",.. |
| 1                    | 2006-01-02 15:12:05.000000 | key29                                                                           | .                                                                               | {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09",".. |
| 1                    | 2006-01-02 15:13:05.000000 | key30                                                                           | .                                                                               | {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10.. |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows returned

--consume data topic4 test_group1 earliest 10 commit;
partition offset key headers value timestamp
3 1 key21  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
8 1 key22  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
8 2 key23  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
2 1 key24  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
4 1 key25  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
7 1 key26  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
0 1 key27  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
9 1 key28  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
4 2 key29  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
3 2 key30  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

delete(topic4);
OK

-- consume with latest after restarting with data already in topic - ensures last offset is loaded correctly;

topic5 := (kafka in partitions = 1) -> (kafka out);
OK

--produce data dataset_4;

--restart cluster;

set max_line_width 300;
OK

--async produce data dataset_5 1000;

--consume data topic5 test_group4 latest 10 commit;
partition offset key headers value timestamp
0 11 key41  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
0 12 key42  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
0 13 key43  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
0 14 key44  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
0 15 key45  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
0 16 key46  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
0 17 key47  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
0 18 key48  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
0 19 key49  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
0 20 key50  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

delete(topic5);
OK

-- create a producer/consumer endpoint stream, produce some data, then delete the stream, then create a new
-- stream with the same name. Verify the cached fetcher state has been removed and can't be consumed;

topic7 := (kafka in partitions = 1) -> (kafka out);
OK

--produce data dataset_6;

(scan all from topic7) -> (sort by key);
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| offset               | event_time                 | key                                                                             | hdrs                                                                            | val                                                                             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0                    | 2006-01-02 15:04:05.000000 | key51                                                                           | .                                                                               | {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01",".. |
| 1                    | 2006-01-02 15:05:05.000000 | key52                                                                           | .                                                                               | {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02",.. |
| 2                    | 2006-01-02 15:06:05.000000 | key53                                                                           | .                                                                               | {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03",".. |
| 3                    | 2006-01-02 15:07:05.000000 | key54                                                                           | .                                                                               | {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04",.. |
| 4                    | 2006-01-02 15:08:05.000000 | key55                                                                           | .                                                                               | {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05",".. |
| 5                    | 2006-01-02 15:09:05.000000 | key56                                                                           | .                                                                               | {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06",.. |
| 6                    | 2006-01-02 15:10:05.000000 | key57                                                                           | .                                                                               | {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07",".. |
| 7                    | 2006-01-02 15:11:05.000000 | key58                                                                           | .                                                                               | {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08",.. |
| 8                    | 2006-01-02 15:12:05.000000 | key59                                                                           | .                                                                               | {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09",".. |
| 9                    | 2006-01-02 15:13:05.000000 | key60                                                                           | .                                                                               | {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10.. |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows returned

delete(topic7);
OK

topic7 := (kafka in partitions = 1) -> (kafka out);
OK

--produce data dataset_7;

--consume data topic7 test_group6 earliest 10 commit;
partition offset key headers value timestamp
0 1 key61  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
0 2 key62  {"v0": 1001,"v1": 2.23,"v2": false,"v3": "22345678.7654321","v4": "foobar02","v5": "somebytes02","v6": "2008-04-03 23:22:17.123"} 2006-01-02 15:05:05.000000
0 3 key63  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
0 4 key64  {"v0": 1003,"v1": 4.23,"v2": false,"v3": "42345678.7654321","v4": "foobar04","v5": "somebytes04","v6": "2008-04-03 23:24:17.123"} 2006-01-02 15:07:05.000000
0 5 key65  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
0 6 key66  {"v0": 1005,"v1": 6.23,"v2": false,"v3": "62345678.7654321","v4": "foobar06","v5": "somebytes06","v6": "2008-04-03 23:26:17.123"} 2006-01-02 15:09:05.000000
0 7 key67  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
0 8 key68  {"v0": 1007,"v1": 8.23,"v2": false,"v3": "82345678.7654321","v4": "foobar08","v5": "somebytes08","v6": "2008-04-03 23:28:17.123"} 2006-01-02 15:11:05.000000
0 9 key69  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000
0 10 key70  {"v0": 1009,"v1": 10.23,"v2": false,"v3": "102345678.7654321","v4": "foobar10","v5": "somebytes10","v6": "2008-04-03 23:30:17.123"} 2006-01-02 15:13:05.000000

delete(topic7);
OK

-- create a stream with a filter between the kafka in and kafka out that only lets some messages through and make
-- sure we consume the correct messages. Previously was a bug where we added to the fetcher cache on the kafka in
-- operator, not on the kafka out operator so this would fail;

topic8 := (kafka in partitions = 1) -> (filter by json_int("v0", val) % 2 == 0) -> (kafka out);
OK

--produce data dataset_8;

(scan all from topic8) -> (sort by key);
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| offset               | event_time                 | key                                                                             | hdrs                                                                            | val                                                                             |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 0                    | 2006-01-02 15:04:05.000000 | key61                                                                           | .                                                                               | {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01",".. |
| 2                    | 2006-01-02 15:06:05.000000 | key63                                                                           | .                                                                               | {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03",".. |
| 4                    | 2006-01-02 15:08:05.000000 | key65                                                                           | .                                                                               | {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05",".. |
| 6                    | 2006-01-02 15:10:05.000000 | key67                                                                           | .                                                                               | {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07",".. |
| 8                    | 2006-01-02 15:12:05.000000 | key69                                                                           | .                                                                               | {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09",".. |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
5 rows returned

--consume data topic8 test_group1 earliest 5 commit no_print_offset;
key headers value timestamp
key61  {"v0": 1000,"v1": 1.23,"v2": true,"v3": "12345678.7654321","v4": "foobar01","v5": "somebytes01","v6": "2008-04-03 23:21:17.123"} 2006-01-02 15:04:05.000000
key63  {"v0": 1002,"v1": 3.23,"v2": true,"v3": "32345678.7654321","v4": "foobar03","v5": "somebytes03","v6": "2008-04-03 23:23:17.123"} 2006-01-02 15:06:05.000000
key65  {"v0": 1004,"v1": 5.23,"v2": true,"v3": "52345678.7654321","v4": "foobar05","v5": "somebytes05","v6": "2008-04-03 23:25:17.123"} 2006-01-02 15:08:05.000000
key67  {"v0": 1006,"v1": 7.23,"v2": true,"v3": "72345678.7654321","v4": "foobar07","v5": "somebytes07","v6": "2008-04-03 23:27:17.123"} 2006-01-02 15:10:05.000000
key69  {"v0": 1008,"v1": 9.23,"v2": true,"v3": "92345678.7654321","v4": "foobar09","v5": "somebytes09","v6": "2008-04-03 23:29:17.123"} 2006-01-02 15:12:05.000000

delete(topic8);
OK

-- a few configs that should be legal;

--create topic test_topic 10;

topic8 := (kafka in partitions = 10) -> (kafka out);
OK
delete(topic8);
OK

topic8 := (kafka in partitions = 10) -> (filter by to_string(val) != "foo") -> (kafka out);
OK
delete(topic8);
OK

topic8 := (bridge from test_topic partitions = 10 props = ()) -> (store stream);
OK
topic9 := topic8 -> (partition by key partitions=23) -> (kafka out);
OK
delete(topic9);
OK
delete(topic8);
OK

-- errors;

-- should fail - cannot have producer and consumer on same stream with different partition scheme as Kafka clients
-- will get confused as they have same topic name;
topic8 := (kafka in partitions = 10) -> (partition by key partitions=13) -> (kafka out);
'kafka in' and 'kafka out' have different partition schemes. is there a partition operator between them? (line 1 column 78):
topic8 := (kafka in partitions = 10) -> (partition by key partitions=13) -> (kafka out)
                                                                             ^

-- should fail - wrong input schema for kafka out;
topic8 := (bridge from test_topic partitions = 10 props = ()) -> (store stream);
OK
topic9 := topic8  -> (project val, key) -> (kafka out);
input to 'kafka out' operator must have column types: [key:bytes, hdrs:bytes, val:bytes] (line 1 column 45):
topic9 := topic8  -> (project val, key) -> (kafka out)
                                            ^
delete(topic8);
OK

--delete topic test_topic;
